// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String  @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String
  customerId   String? @unique

  createdAt DateTime @default(now())

  Site     Site[]
  posts    Post[]
  Invoices Invoices[]

  Subscription   Subscription?
  aiConversation AIconversation?
}

model Site {
  id           String   @id @default(uuid())
  name         String
  description  String
  subdirectory String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  imageUrl     String?
  User         User?          @relation(fields: [userId], references: [id])
  userId       String?
  posts        Post[]
  invoices     Invoices[]
  InvoiceItems InvoiceItems[]
}

model Subscription {
  stripeSubscriptionId String   @id @unique
  interval             String
  status               String
  planId               String
  currentPeriodStart   Int
  currentPeriodEnd     Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @unique
}

model Invoices {
  id                              String   @id @default(cuid())
  url                             String
  invoiceNumber                   String?
  sellerName                      String?
  invoiceTotalSumNoVat            Float?
  invoiceTotalSumWithVat          Float?
  buyerName                       String?
  invoiceDate                     String?
  paymentDate                     String?
  isInvoice                       Boolean?
  isCreditDebitProformaOrAdvanced String?

  uploadedAt DateTime @default(now())

  User   User?          @relation(fields: [userId], references: [id])
  userId String?
  Site   Site?          @relation(fields: [SiteId], references: [id], onDelete: Cascade)
  SiteId String?
  items  InvoiceItems[]
}

model Post {
  id               String   @id @default(uuid()) // Unique identified, msut have
  title            String
  articleContent   Json
  smallDescription String
  image            String
  slug             String   @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  Site   Site?   @relation(fields: [siteId], references: [id], onDelete: Cascade) // 06:16 - onDelete added
  siteId String?
}

model InvoiceItems {
  // Invoice items
  id String @id @default(uuid())

  item                  String?
  quantity              Float?
  unitOfMeasure         String?
  pricePerUnitOfMeasure Float?
  sum                   Float?
  currency              String?
  category              String?
  itemDescription       String?
  commentsForUser       String?
  isInvoice             Boolean?
  invoiceId             String
  invoice               Invoices @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  Site                  Site?    @relation(fields: [siteId], references: [id], onDelete: Cascade)
  siteId                String?

  // Invoice information

  invoiceNumber String?
  sellerName    String?
  // invoiceTotalSumNoVat   Float?
  // invoiceTotalSumWithVat Float?
  // buyerName              String?
  invoiceDate   String?
  paymentDate   String?
}

model AIconversation {
  id     String  @id @default(uuid())
  thread String?
}
